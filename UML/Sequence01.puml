@startuml
title ECサイト_UC01商品を一覧表示する

actor 利用者

利用者 -> Browser : URL入力「http:// ~~~ / ecsite.html」
activate Browser
	note right of Browser
	html表示
	jQuery.getメソッドを実行する
	end note

Browser -> ViewAllProductServlet : jQuery.getメソッドでリクエストを送信
activate ViewAllProductServlet

	note left of ViewAllProductServlet
	jQuery.getメソッド
	第一引数(url)：http://localhost:8080/ojt_ecsite/ViewAllProductServlet
	第二引数(data)：無し
	end note


	note right of ViewAllProductServlet
	csvParser(自作ライブラリ)のJSON変換を使用
	読み込むcsvファイルを指定 
	end note

ViewAllProductServlet -> 商品データ.csv

	note over ViewAllProductServlet
	CSVをJSON形式に変換
	end note

ViewAllProductServlet -> Product : ObjectMapper.readValue
activate Product

	note left of Product
	商品ID, 商品名, 商品カテゴリ, 税抜き価格
	end note

Product -> 税込み価格カリキュレータ : 税込み価格を算出する(String 商品カテゴリ, int 税抜き価格)
activate 税込み価格カリキュレータ

	note over of 税込み価格カリキュレータ
	元のJSONデータに無い「税込み価格」を
	新しく算出する
	(小数点以下は切り捨て)
	end note

Product <-- 税込み価格カリキュレータ : return int 税込み価格
deactivate 税込み価格カリキュレータ
ViewAllProductServlet <-- Product : List<Product>
deactivate Product
ViewAllProductServlet -> PriceComparator : Product 商品1,Product 商品2
activate PriceComparator
ViewAllProductServlet <-- PriceComparator : int 比較結果
deactivate PriceComparator

	note over ViewAllProductServlet
	Productオブジェクトを、価格が安い順に並び換える
	Collections.sort(productList, new PriceComparator());
	end note

	note over ViewAllProductServlet
	ProductオブジェクトをJSON文字列に変換
	end note
	Browser <-- ViewAllProductServlet : レスポンス(JSON)

	note left of ViewAllProductServlet
	jQuery.getメソッド
	第三引数(callback)：通信成功時に実行するコールバック関数
		.done(function (data) {
			//jQueryのセレクタを使って商品名、税込み価格、税抜き価格の行を指定
				//返ってきたJSONデータを使って商品表示領域を動的に変える
		}).fail(function (error) {
			// 通信エラーの場合はこちらが実行され、エラーの詳細をコンソールに出力
			console.log(error);
		});
	}
	end note

deactivate ViewAllProductServlet

利用者 <-- Browser
	note right of 利用者
	jsonファイルから読み込んだ全ての商品情報を含んだ商品一覧画面がWebブラウザに表示される
	end note

deactivate Browser

@enduml