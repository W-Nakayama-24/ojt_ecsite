@startuml
title ECサイト_クラス図_UC02商品を購入する

class Product {
    -final int 商品ID
    -final String 商品名
    -final String 商品カテゴリ
    -final int 税抜き価格
    -final int 税込み価格
    -final String 画像データのパス
    -コンストラクタ(int 商品ID, String 商品名, String 商品カテゴリ, int 税抜き価格)
    +int get商品ID()
    +String get商品名()
    +String get商品カテゴリ()
    +int get税抜き価格()
    +int get税込み価格()
    +String get画像データのパス()
}

note bottom of Product
[参考]
UC01「商品を一覧表示する」で
商品データ(Product)のリストをセッションオブジェクトに保存している

商品情報を取得するために
UC02「商品を購入する」ではこのリストを再利用する
※ 各Productオブジェクトが持つ値の変更はしない
end note


class BuyProductServlet {
    +{static} final long serialVersionUID
    #void doPost(HttpServletRequest request, HttpServletResponse response)
}

BuyProductServlet ..> 購入明細メーカー
class 購入明細メーカー {
    +Receipt 購入明細を作成する(String[] チェックボックスの値)
}

購入明細メーカー ..> 商品情報コレクター
class 商品情報コレクター {
    ~static List<Product> 全商品データ;
    ~void set全商品データ(List<Product> 全商品データ)
    +List<Product> 選択された商品の商品情報を取得する(String[] チェックボックスの値)
}

購入明細メーカー ..> 合計金額カリキュレータ 
class 合計金額カリキュレータ {
    +int 合計金額(税抜き)を算出する(List<Product> 選ばれた商品のリスト)
    +int 合計金額(税込み)を算出する(List<Product> 選ばれた商品のリスト)
}

購入明細メーカー ..> Receipt
class Receipt {
    -final String 購入日時
    -final List<Product> 購入した商品
    -final int 税抜き合計金額
    -final int 税込み合計金額
    +コンストラクタ(String 購入日時, List<Product> 購入した商品, int 税抜き合計金額, int 税込み合計金額)
}

@enduml
